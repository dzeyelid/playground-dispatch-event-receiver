name: GitHub Script action sample

on:
  push:

jobs:
  sample:
    runs-on: ubuntu-latest
    
    steps:
      - name: Show github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        
      - name: Return issues
        uses: actions/github-script@v2
        id: return_github_issues
        with:
          script: |
            return github.issues.list({'all'})

      - name: Show steps.return_github_issues
        env:
          RETURN_GITHUB_ISSUES: ${{ toJson(steps.return_github_issues.outputs) }}
        run: echo "$RETURN_GITHUB_ISSUES"

      - name: Return context
        uses: actions/github-script@v2
        id: return_context
        with:
          script: |
            return context

      - name: Show steps.return_context
        env:
          RETURN_CONTEXT: ${{ toJson(steps.return_context.outputs) }}
        run: echo "$RETURN_CONTEXT"

      - name: Return value as object
        uses: actions/github-script@v2
        id: return_value_as_object
        with:
          script: |
            return "string"

      - name: Show steps.return_value_as_object
        env:
          RETURN_VALUE_AS_OBJECT: ${{ toJson(steps.return_value_as_object.outputs.result) }}
        run: echo "$RETURN_VALUE_AS_OBJECT"

      - name: Return value as string
        uses: actions/github-script@v2
        id: return_value_as_string
        with:
          result-encoding: string
          script: |
            return "string"

      - name: Show steps.return_value_as_string
        env:
          RETURN_VALUE_AS_STRING: ${{ toJson(steps.return_value_as_string.outputs.result) }}
        run: echo "$RETURN_VALUE_AS_STRING"

      - name: parse ref
        uses: actions/github-script@v2
        id: parse_ref
        with:
          result-encoding: string
          script: |
            const { ref } = context
            const words = ref.split('/')
            return words[2]

      - name: Show steps.parse_ref
        env:
          PARSE_REF: ${{ toJson(steps.parse_ref.outputs.result) }}
        run: echo "$PARSE_REF"
